generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model permissions {
  permission_id   Int               @id @default(autoincrement())
  endpoint        String            @db.VarChar(255)
  method          String            @db.VarChar(255)
  module          String            @db.VarChar(255)
  created_at      DateTime?         @default(now()) @db.Timestamp(0)
  update_at       DateTime?         @default(now()) @db.Timestamp(0)
  role_permission role_permission[]
}

model role_permission {
  role_permission_id Int         @id @default(autoincrement())
  role_id            Int
  permission_id      Int
  is_active          Boolean?    @default(false)
  created_at         DateTime?   @default(now()) @db.Timestamp(0)
  update_at          DateTime?   @default(now()) @db.Timestamp(0)
  permissions        permissions @relation(fields: [permission_id], references: [permission_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_permission_id")
  roles              roles       @relation(fields: [role_id], references: [role_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_role_id_2")

  @@index([permission_id], map: "fk_permission_id")
  @@index([role_id], map: "fk_role_id_2")
}

model roles {
  role_id         Int               @id @default(autoincrement())
  name            String            @db.VarChar(255)
  description     String?           @db.VarChar(255)
  is_active       Boolean?
  created_at      DateTime?         @default(now()) @db.Timestamp(0)
  update_at       DateTime?         @default(now()) @db.Timestamp(0)
  role_permission role_permission[]
  users           users[]
}

model users {
  user_id     Int        @id @default(autoincrement())
  email       String     @db.VarChar(255)
  password    String     @db.VarChar(255)
  userName    String     @db.VarChar(255)
  avatar      String?    @db.VarChar(255)
  birth_day   DateTime?  @db.Date
  phone       String?    @db.VarChar(255)
  gender      Boolean    @default(false)
  google_id   String?    @db.VarChar(255)
  face_app_id String?    @db.VarChar(255)
  created_at  DateTime?  @default(now()) @db.Timestamp(0)
  update_at   DateTime?  @default(now()) @db.Timestamp(0)
  role_id     Int
  booking     booking[]
  comments    comments[]
  rooms       rooms[]
  roles       roles      @relation(fields: [role_id], references: [role_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_role_id")

  @@index([role_id], map: "fk_role_id")
}

model booking {
  booking_id   Int             @id @default(autoincrement())
  room_id      Int
  ngayDen      DateTime        @db.DateTime(0)
  ngayDi       DateTime        @db.DateTime(0)
  soLuongKhach Int             @default(1)
  status       booking_status? @default(PENDING)
  user_id      Int
  rooms        rooms           @relation(fields: [room_id], references: [room_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_room_id_5")
  users        users           @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_user_id_5")

  @@index([room_id], map: "fk_room_id_5")
  @@index([user_id], map: "fk_user_id_5")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model comments {
  comment_id  Int       @id @default(autoincrement())
  room_id     Int
  user_id     Int
  created_at  DateTime? @default(now()) @db.Timestamp(0)
  update_at   DateTime? @default(now()) @db.Timestamp(0)
  content     String?   @db.VarChar(255)
  saoBinhLuan Int       @default(5) @db.TinyInt
  rooms       rooms     @relation(fields: [room_id], references: [room_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_room_id_4")
  users       users     @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_user_id_4")

  @@index([room_id], map: "fk_room_id_4")
  @@index([user_id], map: "fk_user_id_4")
}

model locations {
  location_id Int       @id @default(autoincrement())
  tenViTri    String    @db.VarChar(255)
  tinhThanh   String    @db.VarChar(255)
  quocGia     String    @db.VarChar(255)
  hinhAnh     String    @db.VarChar(255)
  created_at  DateTime? @default(now()) @db.Timestamp(0)
  update_at   DateTime? @default(now()) @db.Timestamp(0)
}

model rooms {
  room_id     Int        @id @default(autoincrement())
  tenPhong    String     @db.VarChar(255)
  khach       Int        @default(1)
  phongNgu    Int        @default(1)
  giuong      Int        @default(1)
  phongTam    Int        @default(1)
  description String     @db.VarChar(255)
  giaTien     Float?
  mayGiat     Boolean    @default(true)
  banLa       Boolean    @default(true)
  tivi        Boolean    @default(true)
  dieuHoa     Boolean    @default(true)
  wifi        Boolean    @default(true)
  bep         Boolean    @default(true)
  doXe        Boolean    @default(true)
  hoBoi       Boolean    @default(true)
  banUi       Boolean    @default(true)
  user_id     Int
  location_id Int
  hinhAnh     String     @db.VarChar(255)
  created_at  DateTime?  @default(now()) @db.Timestamp(0)
  update_at   DateTime?  @default(now()) @db.Timestamp(0)
  booking     booking[]
  comments    comments[]
  users       users      @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_user_id_3")

  @@index([user_id], map: "fk_user_id_3")
}

enum booking_status {
  PENDING
  CONFIRMED
  CANCELLED
}
